"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class FileAbstraction {
    constructor(name, classes, sintaxe) {
        this.name = name;
        this.classes = classes;
        this.sintaxe = sintaxe;
    }
    buildFileName() {
        return `${this.name}.${this.sintaxe.fileExtensions.main}`;
    }
    buildFileContent() {
        return this.classes.map(clazz => this.buildClassContent(clazz)).join("\n\n");
    }
    buildClassContent(clazz, baseIdentation = 0) {
        const clazzData = this.sintaxe.buildClassData(clazz);
        const classDeclaration = `${FileAbstraction.setIdentation(baseIdentation)}${clazzData.declaration}${this.sintaxe.reserverData.startCodeBlock}\n`;
        const attributeDeclaration = FileAbstraction.setIdentation(baseIdentation + 1) + clazzData.attributes.join(`${this.sintaxe.reserverData.endLineCode}\n${FileAbstraction.setIdentation(baseIdentation + 1)}`);
        const classConstructor = this.buildMethodContent(clazzData._constructor.declaration, clazzData._constructor.arguments, clazzData._constructor.body, baseIdentation + 1);
        const classMethods = FileAbstraction.setIdentation(baseIdentation + 1) + clazzData.methods.map(method => this.buildMethodContent(method.declaration, method.arguments, method.body, baseIdentation + 1)).join(FileAbstraction.setIdentation(baseIdentation + 1));
        return `${classDeclaration}${attributeDeclaration}${classConstructor}${classMethods}${this.sintaxe.reserverData.endCodeBlock}`;
    }
    buildMethodContent(declaration, args, body, identation) {
        return `${declaration}${this.sintaxe.reserverData.startArgDeclaration}${args.join(this.sintaxe.reserverData.separeArgDeclaraion)}${this.sintaxe.reserverData.endArgDeclaraion}${this.sintaxe.reserverData.startCodeBlock}\n${FileAbstraction.setIdentation(identation + 1)}${body.join(`${this.sintaxe.reserverData.endLineCode}\n${FileAbstraction.setIdentation(identation + 1)}`)}${this.sintaxe.reserverData.endLineCode}\n\n`;
    }
    getClases() {
        return this.classes;
    }
    static setIdentation(n) {
        return '\t'.repeat(n);
    }
}
exports.default = FileAbstraction;
