import FileAbstraction from "../../../abstractions/project/FileAbstraction";
import PackageAbstraction from "../../../abstractions/project/PackageAbstraction";
import { TypeScriptClass, TypescriptMethod } from "./TSClass";
import { TypescriptSintaxe } from "./TSSintaxe";
import { TypeScriptTypes } from "./TSTypes";
export declare class TypescriptConstrains {
    name: string;
    _type: TypeScriptTypes | null;
    isFunction: boolean;
    value: string;
    constructor(name: string, _type: TypeScriptTypes | null, isFunction: boolean, value: TypeScriptTypes | TypescriptMethod);
    toSintaxe(): string;
    getBody(): string;
}
export declare class TypescriptPackage extends PackageAbstraction {
    constrains: TypescriptConstrains[];
    constructor(name: string, constrains: TypescriptConstrains[], classes?: TypeScriptClass[], packages?: TypescriptPackage[]);
}
export declare class TypescriptFile extends FileAbstraction {
    constrains: TypescriptConstrains[];
    private dependencies;
    constructor(name: string, dependencies: string, classes: TypeScriptClass[], sintaxe: TypescriptSintaxe, constrains: TypescriptConstrains[]);
    buildFileContent(): string;
}
