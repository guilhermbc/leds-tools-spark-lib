"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.djangoMVCProject = void 0;
const ClassAbstraction_js_1 = __importDefault(require("../../abstractions/oo/ClassAbstraction.js"));
const FileAbstraction_js_1 = __importDefault(require("../../abstractions/project/FileAbstraction.js"));
const FolderAbstraction_js_1 = __importDefault(require("../../abstractions/project/FolderAbstraction.js"));
const AttributeAbstraction_js_1 = __importDefault(require("../../abstractions/types/AttributeAbstraction.js"));
const PrimitiveTypeAbstraction_js_1 = __importDefault(require("../../abstractions/types/PrimitiveTypeAbstraction.js"));
const Python_js_1 = __importStar(require("../../../test/Python.js"));
class DjangoModel extends ClassAbstraction_js_1.default {
    constructor(clazz) {
        super(clazz.getName(), [], clazz.getAttributes().map(attr => { return DjangoModel.attributeToDjangoAttribute(attr); }));
    }
    static attributeToDjangoAttribute(attr) {
        return new AttributeAbstraction_js_1.default(attr.getName(), DjangoModel.typeToDjangoType(attr.getType()));
    }
    static typeToDjangoType(_type) {
        let className = "undefined";
        if (_type instanceof PrimitiveTypeAbstraction_js_1.default) {
            if (_type instanceof Python_js_1.PythonInteger) {
                className = "IntegerField";
            }
            else if (_type instanceof Python_js_1.PythonString) {
                className = "CharField";
            }
        }
        return new ClassAbstraction_js_1.default(className, [], []);
    }
}
class DjangoMVC {
    constructor() {
        this.pkg = [];
    }
    implement(modelPackages) {
        this.pkg = [];
        this.defineDjangoProjectPackages(modelPackages);
        return this.pkg;
    }
    defineDjangoProjectPackages(modelPackages) {
        this.defineApps(modelPackages);
    }
    defineApps(modelpkg) {
        let appPkg = new FolderAbstraction_js_1.default("apps");
        modelpkg.forEach(pkg => appPkg.addSubfolder(new FolderAbstraction_js_1.default(pkg.getName(), [], this.defineAppFiles(pkg))));
        this.pkg.push(appPkg);
    }
    defineAppFiles(app) {
        return [this.defineModelFile(app.getPackageLevelClasses())];
    }
    defineModelFile(classes) {
        let modelClasses = classes.map(clazz => { return new DjangoModel(clazz); });
        return new FileAbstraction_js_1.default("models", modelClasses, new Python_js_1.default());
    }
}
exports.djangoMVCProject = {
    lenguage: new Python_js_1.default(),
    architecture: new DjangoMVC(),
};
