import AttributeAbstraction from "seon-lib-implementation/dist/abstractions/types/AttributeAbstraction";
import { ModifierOptions, VisibilityOptions } from "seon-lib-implementation/dist/abstractions/shared/Enums";
import MethodAbstraction from "seon-lib-implementation/dist/abstractions/oo/MethodAbstraction";
import InterfaceAbstraction from "seon-lib-implementation/dist/abstractions/oo/InterfaceAbstraction";
export default class ClassAbstraction extends InterfaceAbstraction {
    protected visibility: VisibilityOptions;
    protected modifier: ModifierOptions;
    protected attributes: AttributeAbstraction[];
    protected herances: ClassAbstraction[] | null;
    protected subTypes: InterfaceAbstraction[] | null;
    constructor(name: string, methods: MethodAbstraction[], attributes: AttributeAbstraction[], visibility?: VisibilityOptions, option?: ModifierOptions, herances?: ClassAbstraction[] | null, subTypes?: InterfaceAbstraction[] | null);
    getName(): string;
    getAttributes(): AttributeAbstraction[];
    getAttributesNames(): string[];
    getVisibility(): VisibilityOptions;
    getModifier(): ModifierOptions;
    getHerances(): ClassAbstraction[] | null;
    getSubTypes(): InterfaceAbstraction[] | null;
    addHerance(clazz: ClassAbstraction): void;
    addSubtype(subtype: InterfaceAbstraction): void;
}
