"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Enums_js_1 = require("../shared/Enums.js");
const InterfaceAbstraction_js_1 = __importDefault(require("./InterfaceAbstraction.js"));
class ClassAbstraction extends InterfaceAbstraction_js_1.default {
    constructor(name, methods, attributes, visibility = Enums_js_1.VisibilityOptions.PUBLIC, option = Enums_js_1.ModifierOptions.CONCRETE, herances = null, subTypes = null) {
        super(name, methods);
        this.attributes = attributes;
        this.visibility = visibility;
        this.modifier = option;
        this.herances = herances;
        this.subTypes = subTypes;
    }
    getName() {
        return this.name;
    }
    getAttributes() {
        return this.attributes;
    }
    getAttributesNames() {
        return this.attributes.map(attr => attr.getName());
    }
    getVisibility() {
        return this.visibility;
    }
    getModifier() {
        return this.modifier;
    }
    getHerances() {
        return this.herances;
    }
    getSubTypes() {
        return this.subTypes;
    }
    addHerance(clazz) {
        if (this.herances == null) {
            this.herances = [];
        }
        this.herances.push(clazz);
    }
    addSubtype(subtype) {
        if (this.subTypes == null) {
            this.subTypes = [];
        }
        this.subTypes.push(subtype);
    }
}
exports.default = ClassAbstraction;
