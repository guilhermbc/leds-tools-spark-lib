"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ClassAbstraction_1 = __importDefault(require("./abstractions/oo/ClassAbstraction"));
const PackageAbstraction_1 = __importDefault(require("./abstractions/project/PackageAbstraction"));
const ProjectAbstraction_1 = __importDefault(require("./abstractions/ProjectAbstraction"));
const PrimitiveTypeAbstraction_1 = __importDefault(require("./abstractions/types/PrimitiveTypeAbstraction"));
const TSClass_1 = require("./prefabs/sintaxes/typescript/TSClass");
const TSProject_1 = require("./prefabs/sintaxes/typescript/TSProject");
const TSSintaxe_1 = require("./prefabs/sintaxes/typescript/TSSintaxe");
const TSTypes_1 = require("./prefabs/sintaxes/typescript/TSTypes");
const TSVariables_1 = require("./prefabs/sintaxes/typescript/TSVariables");
const VueModularArchitecture_1 = require("./prefabs/sintaxes/typescript/VueModularArchitecture");
exports.default = {
    vueModularArchProjectSettings: VueModularArchitecture_1.vueModularArchProjectSettings,
    ProjectAbstraction: ProjectAbstraction_1.default,
    PackageAbstraction: PackageAbstraction_1.default,
    PrimitiveTypeAbstraction: PrimitiveTypeAbstraction_1.default,
    TypeScriptAttribute: TSVariables_1.TypeScriptAttribute,
    TypeScriptClass: TSClass_1.TypeScriptClass,
    ClassAbstraction: ClassAbstraction_1.default,
    TypeScriptArggument: TSVariables_1.TypeScriptArggument,
    TypescriptBigInt: TSTypes_1.TypescriptBigInt,
    TypescriptBoolean: TSTypes_1.TypescriptBoolean,
    TypescriptString: TSTypes_1.TypescriptString,
    TypescriptConstrains: TSProject_1.TypescriptConstrains,
    TypescriptNull: TSTypes_1.TypescriptNull,
    TypescriptNumber: TSTypes_1.TypescriptNumber,
    TypescriptUndefined: TSTypes_1.TypescriptUndefined,
    TypescriptFile: TSProject_1.TypescriptFile,
    TypescriptMethod: TSClass_1.TypescriptMethod,
    TypescriptSintaxe: TSSintaxe_1.TypescriptSintaxe,
    TypescriptPackage: TSProject_1.TypescriptPackage,
};
